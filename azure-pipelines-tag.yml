trigger:
  tags:
    include:
      - v*

pool:
  vmImage: 'Ubuntu 20.04'

variables:
  buildConfiguration: 'Release'

steps:
- task: GitVersion@5
  inputs:
    runtime: 'core'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: 'src/*.csproj'

- task: DotNetCoreCLI@2  
  inputs:
    command: 'build'
    projects: 'src/*.csproj'
    arguments: '--configuration $(buildConfiguration) /p:Version=$(GitVersion.SemVer) /p:InformationalVersion=$(GitVersion.FullSemVer)'
  displayName: 'dotnet build $(buildConfiguration)'

# - task: DotNetCoreCLI@2
#   displayName: Test
#   inputs:
#     command: 'test'
#     projects: 'test/*.csproj'
#     arguments: '--collect:"XPlat Code Coverage"'

# - task: PublishCodeCoverageResults@1
#   inputs:
#     codeCoverageTool: 'Cobertura'
#     summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'
#     pathToSources: 'src/'
#     #reportDirectory: 'report/'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.SemVer'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'